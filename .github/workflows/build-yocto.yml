name: Build Yocto

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  kas-lock:
    runs-on: [self-hosted, x86]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run kas lock
        run: |
          kas dump --update --lock --inplace ci/base.yml

      - uses: actions/upload-artifact@v4
        with:
          name: kas-lock
          path: ci/*.lock.yml

  yocto-check-layer:
    needs: kas-lock
    runs-on: [self-hosted, x86]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: kas-lock
          path: ci/*.lock.yml

      - name: Run yocto-check-layer
        run: |
          ci/yocto-check-layer.sh

  compile:
    needs: kas-lock
    strategy:
      max-parallel: 1
      fail-fast: true
      matrix:
        machine:
          - qcm6490-idp
          - qcs6490-rb3gen2-core-kit
          - sa8775p-ride-sx
    runs-on: [self-hosted, x86]
    name: ${{ matrix.machine }}/poky/systemd
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: kas-lock
          path: ci/*.lock.yml

      - name: Kas build
        run: |
          export CACHE_DIR=/srv/gh-runners/quic-yocto
          export DL_DIR=${CACHE_DIR}/downloads
          export SSTATE_DIR=${CACHE_DIR}/sstate-cache
          export KAS_WORK_DIR=$PWD/../kas
          mkdir $KAS_WORK_DIR
          #kas build ci/mirror.yml:ci/${{ matrix.machine }}.yml
          SSTATE_CACHE_MANAGEMENT="${PWD}/poky/scripts/sstate-cache-management.py --cache-dir  ${{ env.SSTATE_DIR }} --remove-duplicated --remove-orphans --debug"
          #FIXME: only to check, when done remove the "echo no" and add the "--yes" arg
          SSTATE_CACHE_MANAGEMENT="echo no | $SSTATE_CACHE_MANAGEMENT"
          kas shell ci/${{ matrix.machine }}.yml --command "$SSTATE_CACHE_MANAGEMENT"
